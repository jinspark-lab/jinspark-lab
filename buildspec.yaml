version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./aws-iam-authenticator
      - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
  pre_build:
    commands:
      - echo logging into docker
      - $(aws ecr get-login --no-include-email --region us-east-1)
  build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`
      - echo Run Maven Command...
      - mvn clean install package -Pprod
      - echo Creating Docker build...
      - docker build -t $tag:latest .
      - docker tag $tag:latest $ecr:$tag
      - docker push $ecr:$tag
  post_build:
    commands:
      - echo Build Completed. Create image definition file...
      - printf '[{"name":"jinspark-lab","imageUri":"%s"}]' $ecr:$tag > imagedefinitions.json
      - echo Deploy Image to EKS Cluster...
      - aws eks update-kubeconfig --name JinsparkLabEks --region us-east-1
      - echo kubectl set image deployment/jinsparklab-kubedeploy backend=$ecr:$tag
      - kubectl set image deployment/jinsparklab-kubedeploy backend=$ecr:$tag
artifacts:
  files:
    - imagedefinitions.json