<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserAppSql">
    <select id="selectUserApp" parameterType="map" resultType="com.mainlab.model.UserApp">
        SELECT
            `user_id` as `userId`,
            `app_id` as `appId`,
            `repo_link` as `repoLink`,
            `intro_text` as `introText`,
            `app_link` as `appLink`,
            `app_picture` as `appPicture`,
            `architecture_url` as `architectureUrl`,
            `description` as `description`
        FROM
            `user_app`
        WHERE
            `user_id` = #{userId}
            AND `app_id` = #{appId}
    </select>
    <select id="selectUserAppList" parameterType="string" resultType="com.mainlab.model.UserApp">
        SELECT
            `user_id` as `userId`,
            `app_id` as `appId`,
            `repo_link` as `repoLink`,
            `intro_text` as `introText`,
            `app_link` as `appLink`,
            `app_picture` as `appPicture`,
            `architecture_url` as `architectureUrl`,
            `description` as `description`
        FROM
            `user_app`
        WHERE
            `user_id` = #{userId}
    </select>
    <insert id="insertUserApp" parameterType="map">
        INSERT INTO
            `user_app`
        (
            `user_id`,
            `app_id`,
            `repo_link`,
            `intro_text`,
            `app_link`,
            `app_picture`,
            `architecture_url`,
            `description`,
            `created`,
            `modified`
        ) VALUES
        (
            #{userId},
            #{userApp.appId},
            #{userApp.repoLink},
            #{userApp.introText},
            #{userApp.appLink},
            #{userApp.appPicture},
            #{userApp.architectureUrl},
            #{userApp.description},
            NOW(),
            NOW()
        )
    </insert>
    <update id="updateUserApp" parameterType="map">
        UPDATE
            `user_app`
        SET
            `app_id` = #{userApp.appId},
            `repo_link` = #{userApp.repoLink},
            `intro_text` = #{userApp.introText},
            `app_link` = #{userApp.appLink},
            `app_picture` = #{userApp.appPicture},
            `architecture_url` = #{userApp.architectureUrl},
            `description` = #{userApp.description},
            `modified` = NOW()
        WHERE
            `user_id` = #{userId}
            AND `app_id` = #{userApp.appId}
    </update>
    <delete id="deleteUserApp" parameterType="map">
        DELETE FROM
            `user_app`
        WHERE
            `user_id` = #{userId}
            AND `app_id` = #{appId}
    </delete>
</mapper>